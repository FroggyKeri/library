-- Generated by Oracle SQL Developer Data Modeler 24.3.1.351.0831
--   at:        2025-03-31 12:07:54 CEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE Movie
    (
     Media_ID ROWID  NOT NULL ,
     Format   VARCHAR2 (10)  NOT NULL ,
     Runtime  DATE  NOT NULL
    )
;



CREATE TABLE Audio 
    ( 
     Media_ID ROWID  NOT NULL , 
     Codec    VARCHAR2 (50)  NOT NULL , 
     Runtime  DATE  NOT NULL 
    ) 
;

ALTER TABLE Audio 
    ADD CONSTRAINT Audio_PK PRIMARY KEY ( Media_ID ) ;

CREATE TABLE Book 
    ( 
     Media_ID ROWID  NOT NULL , 
     ISBN     VARCHAR2 (22)  NOT NULL , 
     Author   VARCHAR2 (70)  NOT NULL 
    ) 
;

ALTER TABLE Book 
    ADD CONSTRAINT Book_PK PRIMARY KEY ( Media_ID ) ;

CREATE TABLE Copy 
    ( 
     Copy_ID        ROWID  NOT NULL , 
     Media_Media_ID ROWID  NOT NULL , 
     Available      NUMBER  NOT NULL , 
     Condition      VARCHAR2 (100)  NOT NULL , 
     Barcode        VARCHAR2 (32)  NOT NULL 
    ) 
;

ALTER TABLE Copy 
    ADD CONSTRAINT Copy_PK PRIMARY KEY ( Copy_ID, Media_Media_ID ) ;

CREATE TABLE Country 
    ( 
     Country_ID   ROWID  NOT NULL , 
     Country_Name VARCHAR2 (50)  NOT NULL 
    ) 
;

ALTER TABLE Country 
    ADD CONSTRAINT Country_PK PRIMARY KEY ( Country_ID ) ;

CREATE TABLE Customer 
    ( 
     Customer_ID ROWID  NOT NULL , 
     FirstName   VARCHAR2 (50)  NOT NULL , 
     LastName    VARCHAR2 (50)  NOT NULL , 
     Mail        VARCHAR2 (50)  NOT NULL , 
     Phone       VARCHAR2 (15)  NOT NULL , 
     Blood_Type  VARCHAR2 (3)  NOT NULL , 
     Birth_Date  DATE  NOT NULL 
    ) 
;

ALTER TABLE Customer 
    ADD CONSTRAINT Customer_PK PRIMARY KEY ( Customer_ID ) ;

CREATE TABLE FSK 
    ( 
     FSK_ID ROWID  NOT NULL , 
     Rating CHAR 
--  WARNING: CHAR size not specified 
                     NOT NULL 
    ) 
;

ALTER TABLE FSK 
    ADD CONSTRAINT FSK_PK PRIMARY KEY ( FSK_ID ) ;

CREATE TABLE Genres 
    ( 
     Genre_ID  ROWID  NOT NULL , 
     Genre     VARCHAR2 (50)  NOT NULL , 
     Surcharge NUMBER  NOT NULL 
    ) 
;

ALTER TABLE Genres 
    ADD CONSTRAINT Genres_PK PRIMARY KEY ( Genre_ID ) ;

CREATE TABLE Library 
    ( 
     Library_ID           ROWID  NOT NULL , 
     Location_Location_ID ROWID  NOT NULL , 
     Library_Name         VARCHAR2 (50)  NOT NULL 
    ) 
;

ALTER TABLE Library 
    ADD CONSTRAINT Library_PK PRIMARY KEY ( Library_ID ) ;

CREATE TABLE Location 
    ( 
     Location_ID        ROWID  NOT NULL , 
     Country_Country_ID ROWID  NOT NULL , 
     Location_Name      VARCHAR2 (50)  NOT NULL 
    ) 
;

ALTER TABLE Location 
    ADD CONSTRAINT Location_PK PRIMARY KEY ( Location_ID ) ;

CREATE TABLE Magazine 
    ( 
     Media_ID ROWID  NOT NULL , 
     Edition  VARCHAR2 (10)  NOT NULL 
    ) 
;

ALTER TABLE Magazine 
    ADD CONSTRAINT Magazine_PK PRIMARY KEY ( Media_ID ) ;

CREATE TABLE Media 
    ( 
     Media_ID           ROWID  NOT NULL , 
     Title              VARCHAR2 (50) , 
     Description        CLOB , 
     Cover              BLOB , 
     FSK_FSK_ID         ROWID  NOT NULL , 
     Library_Library_ID ROWID  NOT NULL , 
     Type_Type_ID       INTEGER  NOT NULL 
    ) 
;

ALTER TABLE Media 
    ADD CONSTRAINT CH_INH_Media 
    CHECK (Type_Type_ID IN (Audio, Book, Magazine, Movie)) 
;

ALTER TABLE Media 
    ADD CONSTRAINT Media_PK PRIMARY KEY ( Media_ID ) ;

CREATE TABLE Media_Genre 
    ( 
     Genres_Genre_ID ROWID  NOT NULL , 
     Media_Media_ID  ROWID  NOT NULL 
    ) 
;

ALTER TABLE Media_Genre 
    ADD CONSTRAINT Media_Genre_PK PRIMARY KEY ( Genres_Genre_ID, Media_Media_ID ) ;



CREATE TABLE Rental 
    ( 
     Rental_ID            ROWID  NOT NULL , 
     Start_Date           DATE  NOT NULL , 
     End_Date             DATE  NOT NULL , 
     Copy_Copy_ID         ROWID  NOT NULL , 
     Copy_Media_ID        ROWID  NOT NULL , 
     Customer_Customer_ID ROWID  NOT NULL 
    ) 
;

ALTER TABLE Rental 
    ADD CONSTRAINT Rental_PK PRIMARY KEY ( Rental_ID ) ;

CREATE TABLE Reservation 
    ( 
     Reservation_ID         ROWID  NOT NULL , 
     Media_Media_ID         ROWID  NOT NULL , 
     Reservation_Date       DATE  NOT NULL , 
     Reservation_Start_Date DATE  NOT NULL , 
     Rental_Rental_ID       ROWID  NOT NULL 
    ) 
;
CREATE UNIQUE INDEX Reservation__IDX ON Reservation 
    ( 
     Rental_Rental_ID ASC 
    ) 
;

ALTER TABLE Reservation 
    ADD CONSTRAINT Reservation_PK PRIMARY KEY ( Reservation_ID ) ;

CREATE TABLE Return 
    ( 
     Return_ID        ROWID  NOT NULL , 
     Return_Date      DATE  NOT NULL , 
     Rental_Rental_ID ROWID  NOT NULL 
    ) 
;
CREATE UNIQUE INDEX Return__IDX ON Return 
    ( 
     Rental_Rental_ID ASC 
    ) 
;

ALTER TABLE Return 
    ADD CONSTRAINT Return_PK PRIMARY KEY ( Return_ID ) ;

CREATE TABLE Shelf 
    ( 
     Shelf_ID           ROWID  NOT NULL , 
     Library_Library_ID ROWID  NOT NULL , 
     Genres_Genre_ID    ROWID  NOT NULL 
    ) 
;

ALTER TABLE Shelf 
    ADD CONSTRAINT Shelf_PK PRIMARY KEY ( Shelf_ID ) ;

CREATE TABLE Type 
    ( 
     Type_ID    INTEGER  NOT NULL , 
     Type       VARCHAR2 (8)  NOT NULL , 
     Base_Price NUMBER  NOT NULL 
    ) 
;

ALTER TABLE Type 
    ADD CONSTRAINT Type_PK PRIMARY KEY ( Type_ID ) ;

ALTER TABLE Audio 
    ADD CONSTRAINT Audio_Media_FK FOREIGN KEY 
    ( 
     Media_ID
    ) 
    REFERENCES Media 
    ( 
     Media_ID
    ) 
;

ALTER TABLE Book 
    ADD CONSTRAINT Book_Media_FK FOREIGN KEY 
    ( 
     Media_ID
    ) 
    REFERENCES Media 
    ( 
     Media_ID
    ) 
;

ALTER TABLE Copy 
    ADD CONSTRAINT Copy_Media_FK FOREIGN KEY 
    ( 
     Media_Media_ID
    ) 
    REFERENCES Media 
    ( 
     Media_ID
    ) 
;

ALTER TABLE Library 
    ADD CONSTRAINT Library_Location_FK FOREIGN KEY 
    ( 
     Location_Location_ID
    ) 
    REFERENCES Location 
    ( 
     Location_ID
    ) 
;

ALTER TABLE Location 
    ADD CONSTRAINT Location_Country_FK FOREIGN KEY 
    ( 
     Country_Country_ID
    ) 
    REFERENCES Country 
    ( 
     Country_ID
    ) 
;

ALTER TABLE Magazine 
    ADD CONSTRAINT Magazine_Media_FK FOREIGN KEY 
    ( 
     Media_ID
    ) 
    REFERENCES Media 
    ( 
     Media_ID
    ) 
;

ALTER TABLE Media 
    ADD CONSTRAINT Media_FSK_FK FOREIGN KEY 
    ( 
     FSK_FSK_ID
    ) 
    REFERENCES FSK 
    ( 
     FSK_ID
    ) 
;

ALTER TABLE Media_Genre 
    ADD CONSTRAINT Media_Genre_Genres_FK FOREIGN KEY 
    ( 
     Genres_Genre_ID
    ) 
    REFERENCES Genres 
    ( 
     Genre_ID
    ) 
;

ALTER TABLE Media_Genre 
    ADD CONSTRAINT Media_Genre_Media_FK FOREIGN KEY 
    ( 
     Media_Media_ID
    ) 
    REFERENCES Media 
    ( 
     Media_ID
    ) 
;

ALTER TABLE Media 
    ADD CONSTRAINT Media_Library_FK FOREIGN KEY 
    ( 
     Library_Library_ID
    ) 
    REFERENCES Library 
    ( 
     Library_ID
    ) 
;

ALTER TABLE Media 
    ADD CONSTRAINT Media_Type_FK FOREIGN KEY 
    ( 
     Type_Type_ID
    ) 
    REFERENCES Type 
    ( 
     Type_ID
    ) 
;

ALTER TABLE Movie 
    ADD CONSTRAINT Movie_Media_FK FOREIGN KEY 
    ( 
     Media_ID
    ) 
    REFERENCES Media 
    ( 
     Media_ID
    ) 
;

ALTER TABLE Rental 
    ADD CONSTRAINT Rental_Copy_FK FOREIGN KEY 
    ( 
     Copy_Copy_ID,
     Copy_Media_ID
    ) 
    REFERENCES Copy 
    ( 
     Copy_ID,
     Media_Media_ID
    ) 
;

ALTER TABLE Rental 
    ADD CONSTRAINT Rental_Customer_FK FOREIGN KEY 
    ( 
     Customer_Customer_ID
    ) 
    REFERENCES Customer 
    ( 
     Customer_ID
    ) 
;

ALTER TABLE Reservation 
    ADD CONSTRAINT Reservation_Media_FK FOREIGN KEY 
    ( 
     Media_Media_ID
    ) 
    REFERENCES Media 
    ( 
     Media_ID
    ) 
;

ALTER TABLE Reservation 
    ADD CONSTRAINT Reservation_Rental_FK FOREIGN KEY 
    ( 
     Rental_Rental_ID
    ) 
    REFERENCES Rental 
    ( 
     Rental_ID
    ) 
;

ALTER TABLE Return 
    ADD CONSTRAINT Return_Rental_FK FOREIGN KEY 
    ( 
     Rental_Rental_ID
    ) 
    REFERENCES Rental 
    ( 
     Rental_ID
    ) 
;

ALTER TABLE Shelf 
    ADD CONSTRAINT Shelf_Genres_FK FOREIGN KEY 
    ( 
     Genres_Genre_ID
    ) 
    REFERENCES Genres 
    ( 
     Genre_ID
    ) 
;

ALTER TABLE Shelf 
    ADD CONSTRAINT Shelf_Library_FK FOREIGN KEY 
    ( 
     Library_Library_ID
    ) 
    REFERENCES Library 
    ( 
     Library_ID
    ) 
;

CREATE OR REPLACE TRIGGER ARC_FKArc_1_Movie 
BEFORE INSERT OR UPDATE OF Media_ID 
ON Movie 
FOR EACH ROW 
DECLARE 
    d INTEGER; 
BEGIN 
    SELECT A.Type_Type_ID INTO d 
    FROM Media A 
    WHERE A.Media_ID = :new.Media_ID; 
    IF (d IS NULL OR d <> Movie) THEN 
        raise_application_error(-20223,'FK Movie_Media_FK in Table Movie violates Arc constraint on Table Media - discriminator column Type_Type_ID doesn''t have value Movie'); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/

CREATE OR REPLACE TRIGGER ARC_FKArc_1_Audio 
BEFORE INSERT OR UPDATE OF Media_ID 
ON Audio 
FOR EACH ROW 
DECLARE 
    d INTEGER; 
BEGIN 
    SELECT A.Type_Type_ID INTO d 
    FROM Media A 
    WHERE A.Media_ID = :new.Media_ID; 
    IF (d IS NULL OR d <> Audio) THEN 
        raise_application_error(-20223,'FK Audio_Media_FK in Table Audio violates Arc constraint on Table Media - discriminator column Type_Type_ID doesn''t have value Audio'); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/

CREATE OR REPLACE TRIGGER ARC_FKArc_1_Book 
BEFORE INSERT OR UPDATE OF Media_ID 
ON Book 
FOR EACH ROW 
DECLARE 
    d INTEGER; 
BEGIN 
    SELECT A.Type_Type_ID INTO d 
    FROM Media A 
    WHERE A.Media_ID = :new.Media_ID; 
    IF (d IS NULL OR d <> Book) THEN 
        raise_application_error(-20223,'FK Book_Media_FK in Table Book violates Arc constraint on Table Media - discriminator column Type_Type_ID doesn''t have value Book'); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/

CREATE OR REPLACE TRIGGER ARC_FKArc_1_Magazine 
BEFORE INSERT OR UPDATE OF Media_ID 
ON Magazine 
FOR EACH ROW 
DECLARE 
    d INTEGER; 
BEGIN 
    SELECT A.Type_Type_ID INTO d 
    FROM Media A 
    WHERE A.Media_ID = :new.Media_ID; 
    IF (d IS NULL OR d <> Magazine) THEN 
        raise_application_error(-20223,'FK Magazine_Media_FK in Table Magazine violates Arc constraint on Table Media - discriminator column Type_Type_ID doesn''t have value Magazine'); 
    END IF; 
    EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
        NULL; 
    WHEN OTHERS THEN 
        RAISE; 
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            18
-- CREATE INDEX                             2
-- ALTER TABLE                             38
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 1
